How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	Being able to compare the two files made it easier to find bugs and where they were. 


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If you ever have a bug and don’t know where it came from, you can go back to older versions of the file that didn’t have the bug and then work from those. 


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Being able to choose when to save a file will help programmers know where they left off and be introspective about the important parts of their work.


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    more efficient.

How can you use the commands git log and git diff to view the history of files?

    git log shows all the commits made in the repository and then git diff can compare the two versions and show the changes

How might using version control make you more confident to make changes that
could break something?

    if you’re afraid you might break something, version control keeps previous unbroken copies, so you can always go back and try again.

Now that you have your workspace set up, what do you want to try using Git for?

    the rest of these lessons.
